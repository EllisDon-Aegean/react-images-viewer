!function(e){function t(t){for(var r,a,l=t[0],u=t[1],s=t[2],d=0,f=[];d<l.length;d++)a=l[d],o[a]&&f.push(o[a][0]),o[a]=0;for(r in u)Object.prototype.hasOwnProperty.call(u,r)&&(e[r]=u[r]);for(c&&c(t);f.length;)f.shift()();return i.push.apply(i,s||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,l=1;l<n.length;l++){var u=n[l];0!==o[u]&&(r=!1)}r&&(i.splice(t--,1),e=a(a.s=n[0]))}return e}var r={},o={1:0},i=[];function a(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=r,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/";var l=window.webpackJsonp=window.webpackJsonp||[],u=l.push.bind(l);l.push=t,l=l.slice();for(var s=0;s<l.length;s++)t(l[s]);var c=u;i.push([50,0]),n()}([,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r={container:{background:"rgba(0, 0, 0, .8)",gutter:{horizontal:10,vertical:10},zIndex:2001},header:{height:40},close:{fill:"white"},footer:{color:"#fff",count:{color:"rgba(255, 255, 255, .75)",fontSize:".85em"},height:40,gutter:{horizontal:0,vertical:5}},thumbnail:{activeBorderColor:"#fff",size:50,gutter:2},arrow:{background:"none",fill:"#fff",height:120}};t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};t.deepMerge=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var i=o({},n);Object.keys(t).forEach(function(o){"object"===r(t[o])&&t[o]&&n[o]?i[o]=e(n[o],t[o]):i[o]=t[o]});return i},t.bindFunctions=function(e){var t=this;e.forEach(function(e){return t[e]=t[e].bind(t)})};t.canUseDom=!("undefined"==typeof window||!window.document||!window.document.createElement)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=c(n(1)),i=c(n(0)),a=n(2),l=c(n(3)),u=n(4),s=c(n(6));function c(e){return e&&e.__esModule?e:{default:e}}function d(e){var t=e.direction,n=e.icon,o=e.onClick,c=e.size,d=e.theme,p=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["direction","icon","onClick","size","theme"]),h=a.StyleSheet.create((0,u.deepMerge)(f,d));return i.default.createElement("button",r({type:"button",className:(0,a.css)(h.arrow,h["arrow__direction__"+t],c&&h["arrow__size__"+c]),onClick:o,onTouchEnd:o},p),i.default.createElement(s.default,{fill:!!d.arrow&&d.arrow.fill||l.default.arrow.fill,type:n}))}d.propTypes={theme:o.default.object,direction:o.default.oneOf(["left","right"]),icon:o.default.string,onClick:o.default.func.isRequired,size:o.default.oneOf(["medium","small"]).isRequired},d.defaultProps={size:"medium"};var f={arrow:{background:"none",border:"none",borderRadius:4,cursor:"pointer",outline:"none",padding:10,position:"absolute",top:"50%",WebkitTouchCallout:"none",userSelect:"none"},arrow__size__medium:{height:l.default.arrow.height,marginTop:l.default.arrow.height/-2,width:40,"@media (min-width: 768px)":{width:70}},arrow__size__small:{height:l.default.thumbnail.size,marginTop:l.default.thumbnail.size/-2,width:30,"@media (min-width: 500px)":{width:40}},arrow__direction__right:{right:l.default.container.gutter.horizontal},arrow__direction__left:{left:l.default.container.gutter.horizontal}};t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=s(n(1)),i=s(n(0)),a=s(n(10)),l=s(n(11)),u=s(n(12));function s(e){return e&&e.__esModule?e:{default:e}}var c={arrowLeft:a.default,arrowRight:l.default,close:u.default},d=function(e){var t=e.fill,n=e.type,o=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["fill","type"]),a=c[n];return i.default.createElement("span",r({dangerouslySetInnerHTML:{__html:a(t)}},o))};d.propTypes={fill:o.default.string,type:o.default.oneOf(Object.keys(c))},d.defaultProps={fill:"#fff"},t.default=d},,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=y(n(1)),i=n(0),a=y(i),l=n(43),u=y(n(36)),s=y(n(3)),c=y(n(5)),d=y(n(13)),f=y(n(14)),p=y(n(15)),h=y(n(16)),m=y(n(18)),g=y(n(19)),b=n(4);function y(e){return e&&e.__esModule?e:{default:e}}function v(e){var t=e.srcSet||e.srcset;return Array.isArray(t)?t.join():t}var w=a.default.createContext({theme:s.default,toggleTheme:function(e){}}),_=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.theme=(0,b.deepMerge)(s.default,n.props.theme),n.classes=l.StyleSheet.create((0,b.deepMerge)(k,n.props.theme)),n.toggleTheme=function(e){n.setState(function(){return{theme:e}})},n.state={imgLoaded:!1,theme:n.theme,toggleTheme:n.toggleTheme},b.bindFunctions.call(n,["gotoNext","gotoPrev","closeBackdrop","handleKeyboardInput","handleImgLoaded"]),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),r(t,[{key:"componentDidMount",value:function(){this.props.isOpen&&(this.props.enableKeyboardInput&&window.addEventListener("keydown",this.handleKeyboardInput),"number"==typeof this.props.currImg&&this.preloadImg(this.props.currImg,this.handleImgLoaded))}},{key:"UNSAFE_componentWillReceiveProps",value:function(e){if(b.canUseDom){if(e.preloadNextImg){var t=e.currImg+1,n=e.currImg-1;this.preloadImg(n),this.preloadImg(t)}if(this.props.currImg!==e.currImg||!this.props.isOpen&&e.isOpen){var r=this.preloadImgData(e.imgs[e.currImg],this.handleImgLoaded);r&&this.setState({imgLoaded:r.complete})}return!this.props.isOpen&&e.isOpen&&e.enableKeyboardInput&&window.addEventListener("keydown",this.handleKeyboardInput),!e.isOpen&&e.enableKeyboardInput&&window.removeEventListener("keydown",this.handleKeyboardInput),null}}},{key:"componentWillUnmount",value:function(){this.props.enableKeyboardInput&&window.removeEventListener("keydown",this.handleKeyboardInput)}},{key:"preloadImg",value:function(e,t){return this.preloadImgData(this.props.imgs[e],t)}},{key:"preloadImgData",value:function(e,t){if(e){var n=new Image,r=v(e);return n.onerror=t,n.onload=t,n.src=e.src,r&&(n.srcset=r),n}}},{key:"gotoNext",value:function(e){var t=this.props,n=t.currImg,r=t.imgs;this.state.imgLoaded&&n!==r.length-1&&(e&&(e.preventDefault(),e.stopPropagation()),this.props.onClickNext())}},{key:"gotoPrev",value:function(e){var t=this.props.currImg;this.state.imgLoaded&&0!==t&&(e&&(e.preventDefault(),e.stopPropagation()),this.props.onClickPrev())}},{key:"closeBackdrop",value:function(e){"viewerBackdrop"!==e.target.id&&"FIGURE"!==e.target.tagName||this.props.onClose()}},{key:"handleKeyboardInput",value:function(e){var t=e.keyCode;return 37===t||33===t||38===t?(this.gotoPrev(e),!0):39===t||34===t||40===t?(this.gotoNext(e),!0):(27===t||32===t)&&(this.props.onClose(),!0)}},{key:"handleImgLoaded",value:function(){this.setState({imgLoaded:!0})}},{key:"renderArrowPrev",value:function(e){return 0===this.props.currImg?null:a.default.createElement(c.default,{theme:e,direction:"left",icon:"arrowLeft",onClick:this.gotoPrev,title:this.props.leftArrowTitle,type:"button"})}},{key:"renderArrowNext",value:function(e){return this.props.currImg===this.props.imgs.length-1?null:a.default.createElement(c.default,{theme:e,direction:"right",icon:"arrowRight",onClick:this.gotoNext,title:this.props.rightArrowTitle,type:"button"})}},{key:"renderDialog",value:function(e){var t=this,n=this.props,r=n.backdropCloseable,o=n.isOpen,s=n.showThumbnails,c=n.width,f=this.state.imgLoaded;if(!o)return a.default.createElement("span",{key:"closed"});var p=s?this.theme.thumbnail.size+this.theme.container.gutter.vertical:0;return a.default.createElement(w.Consumer,null,function(n){var o=n.theme;n.toggleTheme;return o=e.theme,a.default.createElement(d.default,{theme:o,key:"open",onClick:r&&t.closeBackdrop,onTouchEnd:r&&t.closeBackdrop},a.default.createElement(i.Fragment,null,a.default.createElement("div",{className:(0,l.css)(t.classes.content),style:{marginBottom:p,maxWidth:c}},f&&t.renderHeader(o)," ",t.renderImgs(o),t.renderSpinner()," ",f&&t.renderFooter(o)),f&&t.renderThumbnails(o),f&&t.renderArrowPrev(o),f&&t.renderArrowNext(o),t.props.preventScroll&&a.default.createElement(u.default,null)))})}},{key:"renderImgs",value:function(e){var t=this.props,n=t.currImg,r=t.imgs,o=t.onClickImg,i=t.showThumbnails,u=this.state.imgLoaded;if(!r||!r.length)return null;var s=r[n],c=v(s),d=c?"100vw":null,f=i?e.thumbnail.size:0,p=e.header.height+e.footer.height+f+e.container.gutter.vertical+"px";return a.default.createElement("figure",{className:(0,l.css)(this.classes.figure)},a.default.createElement("img",{className:(0,l.css)(this.classes.img,u&&this.classes.imgLoaded),onClick:o,sizes:d,alt:s.alt,src:s.src,srcSet:c,style:{cursor:o?"pointer":"auto",maxHeight:"calc(100vh - "+p}}))}},{key:"renderThumbnails",value:function(e){var t=this.props,n=t.imgs,r=t.currImg,o=t.leftArrowTitle,i=t.rightArrowTitle,l=t.onClickThumbnail,u=t.showThumbnails,s=t.thumbnailOffset;return u?a.default.createElement(h.default,{theme:e,leftTitle:o,rightTitle:i,currImg:r,imgs:n,offset:s,onClickThumbnail:l}):null}},{key:"renderHeader",value:function(e){var t=this.props,n=t.closeBtnTitle,r=t.customControls,o=t.onClose,i=t.showCloseBtn;return a.default.createElement(p.default,{theme:e,customControls:r,onClose:o,showCloseBtn:i,closeBtnTitle:n})}},{key:"renderFooter",value:function(e){var t=this.props,n=t.currImg,r=t.imgs,o=t.imgCountSeparator,i=t.showImgCount;return r&&r.length?a.default.createElement(f.default,{theme:e,caption:r[n].caption,countCurr:n+1,countSeparator:o,countTotal:r.length,showCount:i}):null}},{key:"renderSpinner",value:function(){var e=this.props,t=e.spinner,n=e.spinnerDisabled,r=e.spinnerColor,o=e.spinnerSize,i=this.state.imgLoaded,u=t;return n?null:a.default.createElement("div",{className:(0,l.css)(this.classes.spinner,!i&&this.classes.spinnerActive)},a.default.createElement(u,{color:r,size:o}))}},{key:"render",value:function(){return a.default.createElement(w.Provider,{value:this.state},a.default.createElement(m.default,null," ",this.renderDialog(this.state)," "))}}]),t}();_.propTypes={backdropCloseable:o.default.bool,closeBtnTitle:o.default.string,currImg:o.default.number,customControls:o.default.arrayOf(o.default.node),enableKeyboardInput:o.default.bool,imgCountSeparator:o.default.string,imgs:o.default.arrayOf(o.default.shape({src:o.default.string.isRequired,srcSet:o.default.oneOfType([o.default.array,o.default.string]),caption:o.default.oneOfType([o.default.string,o.default.element]),thumbnail:o.default.string})).isRequired,isOpen:o.default.bool,leftArrowTitle:o.default.string,onClickImg:o.default.func,onClickNext:o.default.func,onClickPrev:o.default.func,onClickThumbnail:o.default.func,onClose:o.default.func.isRequired,preloadNextImg:o.default.bool,preventScroll:o.default.bool,rightArrowTitle:o.default.string,showCloseBtn:o.default.bool,showImgCount:o.default.bool,showThumbnails:o.default.bool,spinnerDisabled:o.default.bool,spinner:o.default.func,spinnerColor:o.default.string,spinnerSize:o.default.number,theme:o.default.object,thumbnailOffset:o.default.number,width:o.default.number},_.defaultProps={currImg:0,enableKeyboardInput:!0,imgCountSeparator:" / ",onClickShowNextImg:!0,preloadNextImg:!0,preventScroll:!0,showCloseBtn:!0,showImgCount:!0,spinnerDisabled:!1,spinner:g.default,spinnerColor:"#fff",spinnerSize:50,theme:{},thumbnailOffset:2,width:1024};var k={content:{position:"relative"},figure:{margin:0},img:{display:"block",height:"auto",margin:"0 auto",maxWidth:"100%",WebkitTouchCallout:"none",userSelect:"none",opacity:0,transition:"opacity .3s"},imgLoaded:{opacity:1},spinner:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",opacity:0,transition:"opacity .3s",pointerEvents:"none"},spinnerActive:{opacity:1}};t.default=_},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return'<svg fill="'+e+'" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 512 512" xml:space="preserve">\n\t\t<path d="M213.7,256L213.7,256L213.7,256L380.9,81.9c4.2-4.3,4.1-11.4-0.2-15.8l-29.9-30.6c-4.3-4.4-11.3-4.5-15.5-0.2L131.1,247.9 c-2.2,2.2-3.2,5.2-3,8.1c-0.1,3,0.9,5.9,3,8.1l204.2,212.7c4.2,4.3,11.2,4.2,15.5-0.2l29.9-30.6c4.3-4.4,4.4-11.5,0.2-15.8 L213.7,256z"/>\n\t</svg>'}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return'<svg fill="'+e+'" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 512 512" xml:space="preserve">\n\t\t<path d="M298.3,256L298.3,256L298.3,256L131.1,81.9c-4.2-4.3-4.1-11.4,0.2-15.8l29.9-30.6c4.3-4.4,11.3-4.5,15.5-0.2l204.2,212.7 c2.2,2.2,3.2,5.2,3,8.1c0.1,3-0.9,5.9-3,8.1L176.7,476.8c-4.2,4.3-11.2,4.2-15.5-0.2L131.3,446c-4.3-4.4-4.4-11.5-0.2-15.8 L298.3,256z"/>\n\t</svg>'}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return'<svg fill="'+e+'" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="100%" height="100%" viewBox="0 0 512 512" style="enable-background:new 0 0 512 512;" xml:space="preserve">\n\t\t<path d="M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4 L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1 c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1 c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z"/>\n\t</svg>'}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=s(n(1)),i=s(n(0)),a=n(2),l=s(n(3)),u=n(4);function s(e){return e&&e.__esModule?e:{default:e}}function c(e){var t=a.StyleSheet.create((0,u.deepMerge)(d,e.theme));return i.default.createElement("div",r({id:"viewerBackdrop",className:(0,a.css)(t.container)},e))}c.propTypes={theme:o.default.object};var d={container:{alignItems:"center",backdropColor:l.default.container.background,boxSizing:"border-box",display:"flex",height:"100%",justifyContent:"center",left:0,paddingTop:l.default.container.gutter.vertical,paddingRight:l.default.container.gutter.horizontal,paddingBottom:l.default.container.gutter.vertical,paddingLeft:l.default.container.gutter.horizontal,position:"fixed",top:0,width:"100%",zIndex:l.default.container.zIndex}};t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=s(n(1)),i=s(n(0)),a=n(2),l=s(n(3)),u=n(4);function s(e){return e&&e.__esModule?e:{default:e}}function c(e){var t=e.caption,n=e.countCurr,o=e.countSeparator,l=e.countTotal,s=e.showCount,c=e.theme,f=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["caption","countCurr","countSeparator","countTotal","showCount","theme"]);if(!t&&!s)return null;var p=a.StyleSheet.create((0,u.deepMerge)(d,c)),h=s?i.default.createElement("div",{className:(0,a.css)(p.footerCount)},n,o,l):i.default.createElement("span",null);return i.default.createElement("div",r({className:(0,a.css)(p.footer)},f),t?i.default.createElement("figcaption",{className:(0,a.css)(p.footerCaption)},t):i.default.createElement("span",null),h)}c.propTypes={theme:o.default.object,caption:o.default.oneOfType([o.default.string,o.default.element]),countCurr:o.default.number,countSeparator:o.default.string,countTotal:o.default.number,showCount:o.default.bool};var d={footer:{boxSizing:"border-box",color:l.default.footer.color,cursor:"auto",display:"flex",justifyContent:"space-between",left:0,lineHeight:1.3,paddingTop:l.default.footer.gutter.vertical,paddingRight:l.default.footer.gutter.horizontal,paddingBottom:l.default.footer.gutter.vertical,paddingLeft:l.default.footer.gutter.horizontal},footerCount:{color:l.default.footer.count.color,fontSize:l.default.footer.count.fontSize,paddingLeft:"1em"},footerCaption:{flex:"1 1 0"}};t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=c(n(1)),i=c(n(0)),a=n(2),l=c(n(3)),u=n(4),s=c(n(6));function c(e){return e&&e.__esModule?e:{default:e}}function d(e){var t=e.customControls,n=e.onClose,o=e.showCloseBtn,c=e.closeBtnTitle,d=e.theme,p=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["customControls","onClose","showCloseBtn","closeBtnTitle","theme"]),h=a.StyleSheet.create((0,u.deepMerge)(f,d));return i.default.createElement("div",r({className:(0,a.css)(h.header)},p),t||i.default.createElement("span",null),!!o&&i.default.createElement("button",{title:c,className:(0,a.css)(h.close),onClick:n},i.default.createElement(s.default,{fill:!!d.close&&d.close.fill||l.default.close.fill,type:"close"})))}d.propTypes={theme:o.default.object,customControls:o.default.array,onClose:o.default.func.isRequired,showCloseBtn:o.default.bool,closeBtnTitle:o.default.string};var f={header:{display:"flex",justifyContent:"space-between",height:l.default.header.height},close:{background:"none",border:"none",cursor:"pointer",outline:"none",position:"relative",top:0,verticalAlign:"bottom",zIndex:1,height:40,marginRight:-10,padding:10,width:40}};t.default=d},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=f(n(1)),a=n(0),l=f(a),u=n(2),s=f(n(17)),c=f(n(5)),d=f(n(3));function f(e){return e&&e.__esModule?e:{default:e}}var p=u.StyleSheet.create({paginatedThumbnails:{bottom:d.default.container.gutter.vertical,height:d.default.thumbnail.size,padding:"0 50px",position:"absolute",textAlign:"center",whiteSpace:"nowrap",left:"50%",transform:"translateX(-50%)"}}),h={height:d.default.thumbnail.size+2*d.default.thumbnail.gutter,width:40},m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={hasCustomPage:!1},n.gotoPrev=n.gotoPrev.bind(n),n.gotoNext=n.gotoNext.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"UNSAFE_componentWillReceiveProps",value:function(e){e.currImg!==this.props.currImg&&this.setState({hasCustomPage:!1})}},{key:"getFirst",value:function(){var e=this.props,t=e.currImg,n=e.offset;return this.state.hasCustomPage?this.clampFirst(this.state.first):this.clampFirst(t-n)}},{key:"setFirst",value:function(e,t){var n=this.state.first;e&&(e.preventDefault(),e.stopPropagation()),n!==t&&this.setState({hasCustomPage:!0,first:t})}},{key:"gotoPrev",value:function(e){this.setFirst(e,this.getFirst()-this.props.offset)}},{key:"gotoNext",value:function(e){this.setFirst(e,this.getFirst()+this.props.offset)}},{key:"clampFirst",value:function(e){var t=this.props,n=t.imgs,r=2*t.offset+1;return e<0?0:e+r>n.length?n.length-r:e}},{key:"renderArrowPrev",value:function(e){var t=this.props.leftTitle;return this.getFirst()<=0?null:l.default.createElement(c.default,{theme:e,direction:"left",size:"small",icon:"arrowLeft",onClick:this.gotoPrev,style:h,title:t,type:"button"})}},{key:"renderArrowNext",value:function(e){var t=this.props,n=t.offset,r=t.imgs,o=t.rightTitle,i=2*n+1;return this.getFirst()+i>=r.length?null:l.default.createElement(c.default,{theme:e,direction:"right",size:"small",icon:"arrowRight",onClick:this.gotoNext,style:h,title:o,type:"button"})}},{key:"render",value:function(){var e=this.props,t=e.imgs,n=e.currImg,o=e.onClickThumbnail,i=e.offset,a=e.theme,c=2*i+1,d=[],f=0;return t.length<=c?d=t:(f=this.getFirst(),d=t.slice(f,f+c)),l.default.createElement("div",{className:(0,u.css)(p.paginatedThumbnails)},this.renderArrowPrev(a),d.map(function(e,t){return l.default.createElement(s.default,r({theme:a,key:f+t},e,{index:f+t,onClick:o,active:f+t===n}))}),this.renderArrowNext(a))}}]),t}();t.default=m,m.propTypes={theme:i.default.object,leftTitle:i.default.string,rightTitle:i.default.string,currImg:i.default.number,imgs:i.default.array,offset:i.default.number,onClickThumbnail:i.default.func.isRequired}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=u(n(1)),o=u(n(0)),i=n(2),a=u(n(3)),l=n(4);function u(e){return e&&e.__esModule?e:{default:e}}function s(e){var t=e.index,n=e.src,r=e.thumbnail,a=e.active,u=e.onClick,s=e.theme,d=r||n,f=i.StyleSheet.create((0,l.deepMerge)(c,s));return o.default.createElement("div",{className:(0,i.css)(f.thumbnail,a&&f.thumbnail__active),onClick:function(e){e.preventDefault(),e.stopPropagation(),u(t)},style:{backgroundImage:'url("'+d+'")'}})}s.propTypes={theme:r.default.object,active:r.default.bool,index:r.default.number,onClick:r.default.func.isRequired,src:r.default.string,thumbnail:r.default.string};var c={thumbnail:{backgroundPosition:"center",backgroundSize:"cover",borderRadius:2,boxShadow:"inset 0 0 0 1px hsla(0, 0%, 100%, .2)",cursor:"pointer",display:"inline-block",height:a.default.thumbnail.size,margin:a.default.thumbnail.gutter,overflow:"hidden",width:a.default.thumbnail.size},thumbnail__active:{boxShadow:"inset 0 0 0 2px "+a.default.thumbnail.activeBorderColor}};t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=s(o),a=s(n(1)),l=n(39),u=n(7);function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.portalElement=null,e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"componentDidMount",value:function(){var e=document.createElement("div");document.body.appendChild(e),this.portalElement=e,this.componentDidUpdate()}},{key:"componentDidUpdate",value:function(){(0,u.render)(i.default.createElement("div",null,i.default.createElement("style",null,"\n\t\t\t\t.fade-enter { opacity: 0.01; }\n\t\t\t\t.fade-enter.fade-enter-active { opacity: 1; transition: opacity 200ms; }\n\t\t\t\t.fade-leave { opacity: 1; }\n\t\t\t\t.fade-leave.fade-leave-active { opacity: .01; transition: opacity 200ms; }\n\t\t"),i.default.createElement(l.TransitionGroup,this.props,i.default.createElement(l.CSSTransition,{timeout:{enter:200,exit:200},className:"fade"},i.default.createElement("div",null,this.props.children)))),this.portalElement)}},{key:"componentWillUnmount",value:function(){(0,u.unmountComponentAtNode)(this.portalElement),document.body.removeChild(this.portalElement)}},{key:"render",value:function(){return null}}]),t}();t.default=c,c.propTypes={children:a.default.arrayOf(a.default.any)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(1)),o=a(n(0)),i=n(2);function a(e){return e&&e.__esModule?e:{default:e}}var l=function(e){var t=i.StyleSheet.create(u(e));return o.default.createElement("div",{className:(0,i.css)(t.bouncingLoader)},o.default.createElement("div",{className:(0,i.css)(t.child)}),o.default.createElement("div",{className:(0,i.css)(t.child,t.child2)}),o.default.createElement("div",{className:(0,i.css)(t.child,t.child3)}))};l.propTypes={color:r.default.string,size:r.default.number};var u=function(e){var t=e.color,n=e.size;return{bouncingLoader:{display:"flex",justifyContent:"center"},child:{width:n,height:n,margin:3*n+"px "+.2*n+"px",background:t,borderRadius:"50%",animationName:function(e){return{"0%":{opacity:1,transform:"translateY(0)"},"100%":{opacity:.1,transform:"translateY(-"+e+"px)"}}}(n),animationDuration:".6s",animationDirection:"alternate",animationIterationCount:"infinite"},child2:{animationDelay:"0.2s"},child3:{animationDelay:"0.4s"}}};t.default=l},,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=s(o),a=s(n(9)),l=s(n(1)),u=n(2);function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state={isOpen:!1,currImg:0},e.gotoNext=e.gotoNext.bind(e),e.gotoPrev=e.gotoPrev.bind(e),e.gotoImg=e.gotoImg.bind(e),e.handleClickImg=e.handleClickImg.bind(e),e.closeImgsViewer=e.closeImgsViewer.bind(e),e.openImgsViewer=e.openImgsViewer.bind(e),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"openImgsViewer",value:function(e,t){t.preventDefault(),this.setState({currImg:e,isOpen:!0})}},{key:"closeImgsViewer",value:function(){this.setState({currImg:0,isOpen:!1})}},{key:"gotoPrev",value:function(){this.setState({currImg:this.state.currImg-1})}},{key:"gotoNext",value:function(){this.setState({currImg:this.state.currImg+1})}},{key:"gotoImg",value:function(e){this.setState({currImg:e})}},{key:"handleClickImg",value:function(){this.state.currImg!==this.props.imgs.length-1&&this.gotoNext()}},{key:"renderGallery",value:function(){var e=this,t=this.props.imgs;if(t){var n=t.filter(function(e){return e.useForDemo}).map(function(t,n){return i.default.createElement("a",{href:t.src,className:(0,u.css)(p.thumbnail,p[t.orientation]),key:n,onClick:function(t){return e.openImgsViewer(n,t)}},i.default.createElement("img",{src:t.thumbnail,className:(0,u.css)(p.source)}))});return i.default.createElement("div",{className:(0,u.css)(p.gallery)},n)}}},{key:"render",value:function(){return i.default.createElement("div",null,this.props.heading&&i.default.createElement("h2",null,this.props.heading),this.props.subheading&&i.default.createElement("p",null,this.props.subheading),this.renderGallery(),i.default.createElement(a.default,{backdropCloseable:!0,currImg:this.state.currImg,imgs:this.props.imgs,isOpen:this.state.isOpen,onClickImg:this.handleClickImg,onClickNext:this.gotoNext,onClickPrev:this.gotoPrev,onClickThumbnail:this.gotoImg,onClose:this.closeImgsViewer,preventScroll:this.props.preventScroll,showThumbnails:this.props.showThumbnails,spinner:this.props.spinner,spinnerColor:this.props.spinnerColor,spinnerSize:this.props.spinnerSize,theme:this.props.theme}))}}]),t}();c.displayName="Gallery",c.propTypes={preventScroll:l.default.bool,spinner:l.default.func,spinnerColor:l.default.string,spinnerSize:l.default.number,theme:l.default.object,heading:l.default.string,imgs:l.default.array,showThumbnails:l.default.bool,subheading:l.default.string};var d=2,f=4,p=u.StyleSheet.create({gallery:{marginRight:-d,overflow:"hidden","@media (min-width: 500px)":{marginRight:-f}},thumbnail:{boxSizing:"border-box",display:"block",float:"left",lineHeight:0,paddingRight:d,paddingBottom:d,overflow:"hidden","@media (min-width: 500px)":{paddingRight:f,paddingBottom:f}},landscape:{width:"30%"},square:{paddingBottom:f,width:"40%","@media (min-width: 500px)":{paddingBottom:f}},source:{border:0,display:"block",height:"auto",maxWidth:"100%",width:"auto"}});t.default=c},,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=a(n(1)),o=a(n(0)),i=n(2);function a(e){return e&&e.__esModule?e:{default:e}}var l=function(e){var t=i.StyleSheet.create(s(e));return o.default.createElement("div",{className:(0,i.css)(t.spinner)},o.default.createElement("div",{className:(0,i.css)(t.square)}))};l.propTypes={color:r.default.string,size:r.default.number};var u={"0%":{top:0,left:"25%",opacity:1},"25%":{top:"50%",left:"50%",opacity:.75},"75%":{top:"50%",left:0,opacity:.5},"100%":{top:0,left:"25%",opacity:1}},s=function(e){var t=e.color,n=e.size;return{spinner:{display:"inline-block",position:"relative",width:n,height:n},square:{position:"absolute",width:n/10,height:n/10,border:"4px solid "+t,borderRadius:"50%",background:t,animationName:u,animationDuration:"2s",animationTimingFunction:"linear",animationIterationCount:"infinite"}}};t.default=l},function(e,t,n){},,,,,,,,,function(e,t,n){"use strict";var r=l(n(0)),o=n(7),i=l(n(35)),a=l(n(40));function l(e){return e&&e.__esModule?e:{default:e}}function u(e){return"https://images.unsplash.com/photo-"+e+"?dpr=2&auto=format&w=1024&h=1024"}function s(e,t){return"https://images.unsplash.com/photo-"+e+"?dpr=2&auto=format&w="+t+" "+t+"w"}function c(e){return"https://images.unsplash.com/photo-"+e+"?dpr=2&auto=format&crop=faces&fit=crop&"+("square"===(arguments.length>1&&void 0!==arguments[1]?arguments[1]:"landscape")?"w=300&h=300":"w=240&h=159")}n(41);(0,o.render)(r.default.createElement("div",null,r.default.createElement("div",null,r.default.createElement("p",null,"Photos courtesy of"," ",r.default.createElement("a",{href:"https://unsplash.com/",target:"_blank",rel:"noopener noreferrer"},"Unsplash"),". Use your keyboard to navigate ",r.default.createElement("kbd",null,"left, up")," ",r.default.createElement("kbd",null,"right, down")," ",r.default.createElement("kbd",null,"space, esc")," — Also, try resizing your browser window.")),r.default.createElement("h3",null,"Default Options"),r.default.createElement(i.default,{imgs:[{id:"1526382551041-3c817fc3d478",caption:"Photo by Simon Alexander",orientation:"square",useForDemo:!0},{id:"1522985225914-17a10a58c8ec",caption:"Photo by Blake Cheek",orientation:"square",useForDemo:!0},{id:"1522931698295-e7b4d3e4188f",caption:"Photo by Oliver Sjöström",orientation:"square",useForDemo:!0},{id:"1516175663209-ac2459a5652f",caption:"Photo by Jeremy Bishop",orientation:"square",useForDemo:!0},{id:"1515911601378-97de98db6dda",caption:"Photo by Emily Reider",orientation:"square",useForDemo:!0}].map(function(e){var t=e.caption,n=e.id,r=e.orientation,o=e.useForDemo;return{src:u(n),thumbnail:c(n,r),srcSet:[s(n,1024),s(n,800),s(n,500),s(n,320)],caption:t,orientation:r,useForDemo:o}})}),r.default.createElement("h3",null,"With Thumbnails"),r.default.createElement(i.default,{imgs:[{id:"1501963422762-3d89bd989568",caption:"Photo by Jeremy Bishop",orientation:"landscape",useForDemo:!0},{id:"1418846531910-2b7bb1043512",caption:"Photo by Vincentiu Solomon",orientation:"landscape",useForDemo:!0},{id:"1509529711801-deac231925ac",caption:"Photo by Joshua Earle",orientation:"landscape",useForDemo:!0},{id:"1499062229216-7c6349e898fb",caption:"Photo by Leio McLaren",orientation:"square",useForDemo:!0},{id:"1495619744764-2cc11fcbe5f0",caption:"Photo by Philipp Kämmerer",orientation:"square",useForDemo:!0},{id:"1488584433697-7ccc1148d30c",caption:"Photo by Flecher Clay",orientation:"square"},{id:"1478562853135-c3c9e3ef7905",caption:"Photo by Austin Neil",orientation:"landscape"},{id:"1476111021705-ac3b3304fe20",caption:"Photo by Dino Reichmuth",orientation:"square"},{id:"1478001517127-fccc92f54906",caption:"Photo by Joshua Earle",orientation:"landscape"},{id:"1455383333344-451b6147021b",caption:"Photo by Joshua Earle",orientation:"landscape"}].map(function(e){var t=e.caption,n=e.id,r=e.orientation,o=e.useForDemo;return{src:u(n),thumbnail:c(n,r),srcSet:[s(n,1024),s(n,800),s(n,500),s(n,320)],caption:t,orientation:r,useForDemo:o}}),showThumbnails:!0}),r.default.createElement("h3",null,"Themed ImgsViewer"),r.default.createElement(i.default,{imgs:[{id:"1506773090264-ac0b07293a64",caption:"Photo by Dan Grinwis",orientation:"square",useForDemo:!0},{id:"1482398650355-d4c6462afa0e",caption:"Photo by Andrew Neel",orientation:"landscape",useForDemo:!0},{id:"1514949823529-bdcc933a9339",caption:"Photo by Kristopher Roller",orientation:"landscape",useForDemo:!0},{id:"1503293962593-47247718a17a",caption:"Photo by Jeremy Bishop",orientation:"landscape",useForDemo:!0},{id:"1509914398892-963f53e6e2f1",caption:"Photo by Linus Nylund",orientation:"landscape",useForDemo:!0}].map(function(e){var t=e.caption,n=e.id,r=e.orientation,o=e.useForDemo;return{src:u(n),thumbnail:c(n,r),srcSet:[s(n,1024),s(n,800),s(n,500),s(n,320)],caption:t,orientation:r,useForDemo:o}}),theme:{container:{background:"rgba(255, 255, 255, .9)"},arrow:{backgroundColor:"rgba(255, 255, 255, .8)",fill:"#222",opacity:.6,transition:"opacity 200ms",":hover":{opacity:1}},arrow__size__medium:{borderRadius:40,height:40,marginTop:-20,"@media (min-width: 768px)":{height:70,padding:15}},arrow__direction__left:{marginLeft:10},arrow__direction__right:{marginRight:10},close:{fill:"#d40000",opacity:.6,transition:"all 200ms",":hover":{opacity:1}},footer:{color:"#000"},footerCount:{color:"rgba(0, 0, 0, .6)"},thumbnail:{},thumbnail__active:{boxShadow:"0 0 0 2px #00d8ff"}},spinner:a.default,spinnerColor:"#d40000",spinnerSize:150,showThumbnails:!0})),document.getElementById("example"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,